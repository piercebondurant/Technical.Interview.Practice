Pretend we have a series of N lights on the wall, each with their own switch.
When you turn on the switch for one of the lights, it flips the 
switch for all lights to the right of the one you flipped. Meaning, any lights that were
on previously are now off, and any lights that were off previously are now on.

Your goal is to write a function to determine how many times you need to flip a switch in order to 
turn on all of the lights, and return that value.

        Example 1:           Example 2:
        [0, 1, 0, 1]         [0, 0, 1, 1]        
                                    
        Hit Switch 0:        Hit Switch 0:        
        [1, 0, 1, 0]         [1, 1, 0, 0]        
                                    
        Hit Switch 1:        Hit Switch 2:        
        [1, 1, 0, 1]         [1, 1, 1, 1]        
                                    
        Hit Switch 2:        Result: 2 Presses        
        [1, 1, 1, 0]                

        Hit Switch 3:
        [1, 1, 1, 1]

        Result: 4 Presses


Insert the following function signature in the class Program in Program.cs

public static int CountSwitches(List<int> argument)
{
    return 0;
}

You may not modify the function signature including the return type or its parameters, but you are free to make any changes
to the body of the funciton. 

TestBulbs has two constructors, a default and an overload. 

The default will use the default parameters of a random seed of 1, 10 tests
and a maximum number of bulbs of 15 per test.

The overload will, in order, take a random seed, number of tests, and maximum number of bulbs as arguments. 

You can use either function from the TestBulbs class, RunForPassed(), or RunWithDetails()

RunForPassed() will provide you with the expected result, actual result, and whether or not your implementation passed.
True will represent passed, and false will represent a failure for any given test case.

RunWithDetails() will provide you the arrays used in testing, as well as your actual result for each test case.   

Here are examples of each being called from the Main Method:

new Demos.BulbsDemo.TestBulbs().RunForPassed();
new Demos.BulbsDemo.TestBulbs().RunWithDetails();
new Demos.BulbsDemo.TestBulbs(15, 5, 5).RunForPassed();
new Demos.BulbsDemo.TestBulbs(15, 5, 5).RunWithDetails();